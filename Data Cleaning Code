/* Cleaning Housing Data Using SQL Queries */

Select * 
From NashvilleHousing

/* Standardize Date Format */

Select SaleDateConverted , CONVERT(Date,SaleDate)
From NashvilleHousing

Update NashvilleHousing
Set SaleDate = CONVERT(Date,SaleDate)

Alter Table NashvilleHousing
Add SaleDateConverted Date;

Update NashvilleHousing
Set SaleDateConverted = CONVERT(Date,SaleDate)

/* Populate Property Address Data */

Select *
From NashvilleHousing
Where PropertyAddress is null

Select a.ParcelID, a.PropertyAddress, b.ParcelID, b.PropertyAddress, ISNULL(a.PropertyAddress, b.PropertyAddress)
From NashvilleHousing a
Join NashvilleHousing b
	on a.ParcelID = b.ParcelID
	And a.[UniqueID ] <> b.[UniqueID ]
Where a.PropertyAddress is null

Update a
SET PropertyAddress = ISNULL(a.PropertyAddress, b.PropertyAddress)
From NashvilleHousing a
Join NashvilleHousing b
	on a.ParcelID = b.ParcelID
	And a.[UniqueID ] <> b.[UniqueID ]
Where a.PropertyAddress is null

/* Breaking Address Column into 'Address', 'City', and 'State'  by creating two new Columns */

Select *
From NashvilleHousing

Select SUBSTRING(PropertyAddress, 1, CHARINDEX(',', PropertyAddress)-1) as Address
, SUBSTRING(PropertyAddress, CHARINDEX(',', PropertyAddress)+1, LEN(PropertyAddress)) as Address

From NashvilleHousing

Alter Table NashvilleHousing
Add ProperySplitAddress NvarChar(255);

Alter Table NashvilleHousing
Add PropertySplitCity Nvarchar(255);

Update NashvilleHousing
Set ProperySplitAddress = SUBSTRING(PropertyAddress, 1, CHARINDEX(',', PropertyAddress)-1)

Update NashvilleHousing
Set PropertySplitCity = SUBSTRING(PropertyAddress, CHARINDEX(',', PropertyAddress)+1, LEN(PropertyAddress))

/* Breaking Owner Column into new Columns using Parsename */

Select 
PARSENAME (REPLACE (Owneraddress, ',', '.'), 3)
,PARSENAME (REPLACE (Owneraddress, ',', '.'), 2)
, PARSENAME (REPLACE (Owneraddress, ',', '.'), 1)
From NashvilleHousing 

Alter Table NashvilleHousing
Add OwnerSplitAddress Nvarchar(255);

Alter Table NashvilleHousing
Add OwnerSplitCity Nvarchar(255);

Alter Table NashvilleHousing
Add OwnerSplitState Nvarchar(255);

Update NashvilleHousing
Set OwnerSplitAddress = PARSENAME (REPLACE (Owneraddress, ',', '.'), 3)


Update NashvilleHousing
Set OwnerSplitCity = PARSENAME (REPLACE (Owneraddress, ',', '.'), 2)


Update NashvilleHousing 
Set OwnerSplitState = PARSENAME (REPLACE (Owneraddress, ',', '.'), 1)

/* Change Y and N to Yes and No in "Sold as Vacant" feild */

Select Distinct(SoldAsVacant), Count(SoldAsVacant)
From NashvilleHousing
Group By SoldAsVacant
Order By 2

Select SoldAsVacant 
, Case When SoldAsVacant = 'Y' THEN 'Yes'
	When SoldAsVacant = 'N' THEN 'No'
	Else SoldAsVacant
End
From NashvilleHousing

Update NashvilleHousing 
Set SoldAsVacant = Case When SoldAsVacant = 'Y' THEN 'Yes'
	When SoldAsVacant = 'N' THEN 'No'
	Else SoldAsVacant
End

/* Remove Duplicates using CTEs */ 

With RowNumCTE As(
Select *,
	ROW_NUMBER() Over (
	Partition By ParcelID,
				PropertyAddress,
				SalePrice,
				SaleDate,
				LegalReference
				Order By 
				UniqueID
				) row_num

From NashvilleHousing
)
Select *
From RowNumCTE
Where row_num > 1

/* Delete Unused Columns using drop column */

Select *
From NashvilleHousing

Alter Table NashvilleHousing
Drop Column OwnerAddress, TaxDistrict, PropertyAddress

Alter Table NashvilleHousing
Drop Column Saledate
